/**
 * 模块(官方概念):
 *      关于术语的一点说明:请务必注意一点
 *          typescript 1.5里术语名已经发生了变化。
 *              "内部模块"现在称为"命名空间"。
 *              "外部模块"现在简称为"模块"
 * 
 *      概念:
 *          模块在其自身的作用域里执行,而不是在全局作用域里。
 *          这意味着定义在一个模块里的变量、函数、类等等在模块外部是不可见的,除非你明确地使用export形式之一导出他们。
 *          相反,如果想使用其他模块导出的变量、函数、类、接口等,你必须要导入他们,可以使用import形式之一
 * 
 * 
 * 
 * 
 * 自己的理解:
 *      我们可以把一些公共的功能单独抽离成一个文件或者文件夹作为一个模块。
 *      模块里面的变量、函数、类等默认是私有的
 *      如果我们想要在外部访问模块里的数据(变量、函数、类等),我们需要通过export暴露模块里面的数据(变量、函数、类等)。暴露之后我们通过import引入模块就可以使用模块里的数据
 *          
*/


// 引入
// 当导入的内容 名称很长的时候  可以使用 as 重新命名
// 语法  导入的函数 as 重新命名
import { url, fun1, fun2, getMyNameInfo as getName } from "./modules/db"

console.log(url);
fun1();
fun2()
getName()